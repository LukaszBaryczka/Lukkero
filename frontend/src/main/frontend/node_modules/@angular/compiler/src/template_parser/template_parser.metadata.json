[
	{
		"__symbolic": "module",
		"version": 3,
		"metadata": {
			"TEMPLATE_TRANSFORMS": {
				"__symbolic": "new",
				"expression": {
					"__symbolic": "reference",
					"module": "@angular/core",
					"name": "InjectionToken"
				},
				"arguments": [
					"TemplateTransforms"
				]
			},
			"TemplateParseError": {
				"__symbolic": "class",
				"extends": {
					"__symbolic": "reference",
					"module": "../parse_util",
					"name": "ParseError"
				},
				"members": {
					"__ctor__": {
						"__symbolic": "constructor",
						"parameters": {
							"__symbolic": "reference",
							"module": "../parse_util",
							"name": "ParseErrorLevel"
						}
					}
				}
			},
			"TemplateParseResult": {
				"__symbolic": "class",
				"members": {
					"__ctor__": {
						"__symbolic": "constructor",
						"parameters": {
							"__symbolic": "reference",
							"name": "Array",
							"arguments": {
								"__symbolic": "reference",
								"module": "../parse_util",
								"name": "ParseError"
							}
						}
					}
				}
			},
			"TemplateParser": {
				"__symbolic": "class",
				"decorators": {
					"__symbolic": "call",
					"expression": {
						"__symbolic": "reference",
						"module": "../injectable",
						"name": "CompilerInjectable"
					}
				}],
				"members": {
					"__ctor__": {
						"__symbolic": "constructor",
						"parameterDecorators": [
							null,
							null,
							null,
							null,
							null,
							[
								{
									"__symbolic": "call",
									"expression": {
										"__symbolic": "reference",
										"module": "@angular/core",
										"name": "Optional"
									}
								},
								{
									"__symbolic": "call",
									"expression": {
										"__symbolic": "reference",
										"module": "@angular/core",
										"name": "Inject"
									},
									"arguments": {
										"__symbolic": "reference",
										"name": "TEMPLATE_TRANSFORMS"
									}
								}
							]
						],
						"parameters": {
							"__symbolic": "reference",
							"name": "Array",
							"arguments": {
								"__symbolic": "reference",
								"module": "./template_ast",
								"name": "TemplateAstVisitor"
							}
						}
					}],
					"parse": {
						"__symbolic": "method"
					}],
					"tryParse": {
						"__symbolic": "method"
					}],
					"tryParseHtml": {
						"__symbolic": "method"
					}],
					"expandHtml": {
						"__symbolic": "method"
					}],
					"getInterpolationConfig": {
						"__symbolic": "method"
					}],
					"_assertNoReferenceDuplicationOnTemplate": {
						"__symbolic": "method"
					}
				}
			},
			"splitClasses": {
				"__symbolic": "function",
				"parameters": [
					"classAttrValue"
				],
				"value": {
					"__symbolic": "error",
					"message": "Expression form not supported",
					"line": 799,
					"character": 37
				}
			},
			"createElementCssSelector": {
				"__symbolic": "function"
			},
			"removeSummaryDuplicates": {
				"__symbolic": "function"
			}
		}
	},
	{
		"__symbolic": "module",
		"version": 1,
		"metadata": {
			"TEMPLATE_TRANSFORMS": {
				"__symbolic": "new",
				"expression": {
					"__symbolic": "reference",
					"module": "@angular/core",
					"name": "InjectionToken"
				},
				"arguments": [
					"TemplateTransforms"
				]
			},
			"TemplateParseError": {
				"__symbolic": "class",
				"extends": {
					"__symbolic": "reference",
					"module": "../parse_util",
					"name": "ParseError"
				},
				"members": {
					"__ctor__": {
						"__symbolic": "constructor",
						"parameters": {
							"__symbolic": "reference",
							"module": "../parse_util",
							"name": "ParseErrorLevel"
						}
					}
				}
			},
			"TemplateParseResult": {
				"__symbolic": "class",
				"members": {
					"__ctor__": {
						"__symbolic": "constructor",
						"parameters": {
							"__symbolic": "reference",
							"name": "Array",
							"arguments": {
								"__symbolic": "reference",
								"module": "../parse_util",
								"name": "ParseError"
							}
						}
					}
				}
			},
			"TemplateParser": {
				"__symbolic": "class",
				"decorators": {
					"__symbolic": "call",
					"expression": {
						"__symbolic": "reference",
						"module": "../injectable",
						"name": "CompilerInjectable"
					}
				}],
				"members": {
					"__ctor__": {
						"__symbolic": "constructor",
						"parameterDecorators": [
							null,
							null,
							null,
							null,
							null,
							[
								{
									"__symbolic": "call",
									"expression": {
										"__symbolic": "reference",
										"module": "@angular/core",
										"name": "Optional"
									}
								},
								{
									"__symbolic": "call",
									"expression": {
										"__symbolic": "reference",
										"module": "@angular/core",
										"name": "Inject"
									},
									"arguments": {
										"__symbolic": "reference",
										"name": "TEMPLATE_TRANSFORMS"
									}
								}
							]
						],
						"parameters": {
							"__symbolic": "reference",
							"name": "Array",
							"arguments": {
								"__symbolic": "reference",
								"module": "./template_ast",
								"name": "TemplateAstVisitor"
							}
						}
					}],
					"parse": {
						"__symbolic": "method"
					}],
					"tryParse": {
						"__symbolic": "method"
					}],
					"tryParseHtml": {
						"__symbolic": "method"
					}],
					"expandHtml": {
						"__symbolic": "method"
					}],
					"getInterpolationConfig": {
						"__symbolic": "method"
					}],
					"_assertNoReferenceDuplicationOnTemplate": {
						"__symbolic": "method"
					}
				}
			},
			"splitClasses": {
				"__symbolic": "function",
				"parameters": [
					"classAttrValue"
				],
				"value": {
					"__symbolic": "error",
					"message": "Expression form not supported",
					"line": 799,
					"character": 37
				}
			},
			"createElementCssSelector": {
				"__symbolic": "function"
			},
			"removeSummaryDuplicates": {
				"__symbolic": "function"
			}
		}
	}
]